package com.capg;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Rotations {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		int []A;
		int i;
		int n,K;
		System.out.println("Enter the number of elements");
		try {
			n=Integer.parseInt(br.readLine());
			A=new int[n];
			System.out.println("Enter the array");
			for(i=0;i<n;i++)
				A[i]=Integer.parseInt(br.readLine());
			System.out.println("Enter the rotations");
			K=Integer.parseInt(br.readLine());
			Rotations r=new Rotations();
			int[] x=r.solution(A,K);
			for(int z=0;z<n;z++)
				System.out.println(x[z]);
		} catch (NumberFormatException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public int[] solution(int[] A,int K)
	{
		List<Integer> list1=new ArrayList<Integer>(A.length);
		for(int i:A)
		{
			list1.add(Integer.valueOf(i));
		}
		Collections.rotate(list1,K);
		Object[] objects=list1.toArray();
		int[] A2=new int[objects.length];
		for(int i=0;i<objects.length;i++)
		{
			A2[i]=(int)objects[i];
		}

		return A2;
		
	}

}
